plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"pooltoy-origin" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

repositories {
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings

	maven { url = "https://mvn.devos.one/releases" } // Porting Lib releases
	maven { url = "https://mvn.devos.one/snapshots" } // Create and several dependencies
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" } // Forge Config API Port

	maven { // Fabric ASM for Porting Lib
		url = "https://jitpack.io/"
		content { includeGroupAndSubgroups("com.github") }
	}

	maven { url = "https://maven.shedaniel.me" } // Cloth Config, REI
	maven { url = "https://maven.blamejared.com" } // JEI

	maven { url = "https://maven.terraformersmc.com/releases" } // Mod Menu, EMI

	mavenLocal()
	mavenCentral()
	exclusiveContent {

		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}

		filter {
			includeGroup "maven.modrinth"
		}

	}
	maven {
		name = "QuiltMC"
		url = "https://maven.quiltmc.org/repository/release"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://masa.dy.fi/maven"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Create - dependencies are added transitively
	modImplementation("com.simibubi.create:create-fabric-$minecraft_version:0.5.1-j-build.1631+mc1.20.1")

	modApi "com.github.apace100:apoli:2.9.0"
	include "com.github.apace100:apoli:2.9.0"

	modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.1.0") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.1.0") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("me.shedaniel.cloth:cloth-config-fabric:10.0.96") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "com.github.apace100:origins-fabric:v1.10.0"
	include modApi("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")

	// Development QOL
	modLocalRuntime("com.terraformersmc:modmenu:7.2.2")

	// Recipe Viewers - Create Fabric supports JEI, REI, and EMI.
	// See root gradle.properties to choose which to use at runtime.
	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "jei": modLocalRuntime("mezz.jei:jei-$minecraft_version-fabric:15.20.0.106"); break
		case "rei": modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:12.1.785+fabric"); break
		case "emi": modLocalRuntime("dev.emi:emi-fabric:1.1.22+1.20.1+fabric"); break
		case "disabled": break
		default: println("Unknown recipe viewer specified: $recipe_viewer. Must be JEI, REI, EMI, or disabled.")
	}
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}